Komp:
	USB-to-TTL Arduino
	Interface za joystick na kompu - i mapiranja i sve
	Arduino kod za motore - tri motora, ko i prije
	Mogućnost proslijedit neki string od kompa senzorskom Arduinu i obratno

motorski Arduino unutra, senzorski vani

Motorski Arduino:
	-motori, naravno
	-nekoliko digitalnih izlaza za kontrolu LED-ica, kamera, votevr
	-senzorika za baterije
		snima svaku ćeliju zasebno 3x3.7V u seriji; za svaku od njih senzor napona
	-senzori temperature za grijanje u podmornici
		-ideja je da Arduinče sâmo to prati i poduzme korektivne akcije i alarmira korisnika
	-komp mora imat mogućnost tražit status

Senzorski Arduino:
	-sluša na I2C
	-većina senzora ima neki analogni output



####################################################

##probat Serial na 115200 - lol jebeš ovo, na 9600 se grči - lol ipak ne, 9600 je bilo presporo pa je odlazilo u vrit, [loki] 115200 je way to go, arduino je presporo praznio buffer 
	vjerojatno je na kompu prepunio serijski buffer
	pražnjenje buffera s podacima je presporo jer je red-dva veličine sporije od obrade podataka, a python samo puni
	>>>> jel greška u tom slučaju lančana?

dinamičko određivanje serial porta
##provjeri zakaj pri full gasu ne trza - zajebo sam s MOTOR_MAP_CONST - nije trebalo bit 2**16-1 nego 2**15-1

LED control, internal temperature control, battery control
proto-TCP implementirat - da Python pošalje bajt i čeka odgovor od ovog debila
	safety mehanizama imamo onda: duljina, checksum, stop-byte i još proto-tcp



By loki:

    - ovaj arduino library napisat objektno (dakle struktura + metode)
    - error handling napravit ljepse (dinamicki polim., ne preko serije)
    - dodat mogucnost komunikacije preko software seriala
    - promijenit da se struktura poruke moze ezz mijenjati, i sukladno tome racunati checksuma
    - potrebo provjeriti funkcionira li to govno kak spada u nekim ne-idealnim uvijetima [update: funkcionira preko 20m razjebanog kabla skup s pasivnim ethernet hubom]
    - obaviti sinkronizaciju slanja / primanja poruka, da se nebi opet desio buffer overflow (razlog zasto smo imali toliko gresaka)
    - funkciju za oporavak od pogreske napisati efikasije (da ne dropa bezveze ako su dobri podaci)
    - u funkciji za oporavak od pogreske, flushat cijeli buffer (jer se isti napuni zacas) [BITNO: kao prvu naredbu]
    - dodat nekakav lijepi odabir moda (sinkrono/asinkrono)    
    - malo zakomentirat funkcije i dodat ih u vise biblioteka (po funkciji), cisto da se vidi sto se radi
    - pri paljenju programa, motore ostavit u NEUTRAL-u oko 2 sekunde (dakle ne slusat naredbe), nakon tog ispraznit 
            buffer (Serial.flush ja mislim) i onda krenut slusat, mozda upalit LED 13 dok je u tom stanju
    [?] palit/gasit LED13 pri primanju poruka, cisto da se vidi fizicki da radi ?
    [?] dodat kakav emergency flag koji sve gasi [?]
